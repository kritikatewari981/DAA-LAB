#include<iostream>
using namespace std;
int partition(int arr[],int start,int end)
{
    int pos=start;
    int i;
    for(i=start;i<end;i++)
    {
        if(arr[i]<arr[end])
        {
            swap(arr[i],arr[pos]);
            pos++;
        }
    }
    swap(arr[pos],arr[end]);
    return pos;
}
void quickselect(int arr[],int n,int k)
{
    int targetindex=n-k;
    int start=0;
    int end=n-1;
    int pivot;
    while(start<=end)
    {
        pivot=partition(arr,start,end);
        if(pivot==targetindex)
        {
            cout<<"the"<<k<<" largest lement is"<<arr[pivot]<<endl;
            return;
        }
        else if(pivot>targetindex)
        {
            end=pivot-1;
        }
        else
        {
            start=pivot+1;
        }
    }
}
int main()
{
    int n,k;
    int arr[10] = {7, 9, 8, 0, 6, 4, 1, 2, 3, 5};
     n = 10;
    cout<<"enter the kth largest element you want to know: ";
    cin>>k;
    if(k<=0||k>n)
    {
        cout<<"invalid value of k"<<endl;
        return 1;
    }
    quickselect(arr,n,k);
    return 0;
}
