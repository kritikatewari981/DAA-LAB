#include<iostream>       //RANDOMIZED QUICK SORT
#include <cstdlib>
using namespace std;
int compar=0;
int swaps=0;
int partition(int arr[],int start,int end)
{
    int pos=start;
    int i;
    int temp;
    for(i=start;i<end;i++)
    {
        compar++;
        if(arr[i]<=arr[end])
        {
            temp=arr[i];
            arr[i]=arr[pos];
            arr[pos]=temp;
            swaps++;
            pos++;
        }
    }
    temp=arr[pos];
    arr[pos]=arr[end];
    arr[end]=temp;
    swaps++;
    return pos;
}

int randompartition(int arr[],int start,int end)
{
    int randomindex=start+rand()%(end-start+1);
    swap(arr[randomindex],arr[end]);
    swaps++;
    return partition(arr,start,end);
}
void quicksort(int arr[],int start,int end)
{
    if(start>=end)
    {
        return;
    }
    else{
        int pivot=randompartition(arr,start,end);
        quicksort(arr,start,pivot-1);
        quicksort(arr,pivot+1,end);
    }
}
int main()
{
    int i,n,t;
    int arr[50];
    cout<<"enter the test cases";
    cin>>t;
    cout<<"enter the size"<<endl;
    cin>>n;
    for(i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    quicksort(arr,0,n-1);
    cout<<"the sorted array is"<<endl;
    for(i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<"comparisons"<<compar<<endl;
    cout<<"swaps"<<swaps<<endl;
    return 0;
}
